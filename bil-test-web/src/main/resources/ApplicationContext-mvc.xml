<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射   请求映射-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            <!--<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"/>-->
            <!--<bean clacom.bob.security.http.converter.DecryptEncryptHttpMessageConverterrter" />-->
            <!--<ref bean="decryptEncryptFastJsonHttpMessageConverter"/>-->
        </mvc:message-converters>
        <mvc:argument-resolvers>
            <bean id="requestHandlerMethodArgumentResolver"
                  class="com.bob.security.http.support.RequestHandlerMethodArgumentResolver">
                <constructor-arg>
                    <ref bean="decryptResponseEncryptProcessor"/>
                </constructor-arg>
            </bean>
        </mvc:argument-resolvers>
        <mvc:return-value-handlers>
            <bean class="com.bob.security.http.support.ResponseHandlerMethodReturnValueHandler">
                <constructor-arg>
                    <ref bean="decryptResponseEncryptProcessor"/>
                </constructor-arg>
            </bean>
        </mvc:return-value-handlers>
    </mvc:annotation-driven>

    <aop:aspectj-autoproxy/>

    <bean id="decryptResponseEncryptProcessor"
          class="com.bob.security.http.support.DefaultRequestDecryptResponseEncryptProcessor"/>


    <!--<bean id="requestDecryptResponseEncryptBodyProcessorImpl"-->
    <!--class="com.bob.spring.demo.RequestDecryptResponseEncryptBodyProcessorImpl" />-->

    <!--<bean id="decryptEncryptFastJsonHttpMessageConverter"-->
    <!--class="com.bob.spring.extend.DecryptEncryptFastJsonHttpMessageConverter"-->
    <!--p:requestDecryptResponseEncryptBodyProcessor-ref="requestDecryptResponseEncryptBodyProcessorImpl" />-->


    <!--<bean id="requestDecryptResponseEncryptBodyMethodProcessor"-->
    <!--class="com.bob.spring.extend.RequestDecryptResponseEncryptBodyMethodProcessor" >-->
    <!--<constructor-arg >-->
    <!--<list>-->
    <!--<ref bean="decryptEncryptFastJsonHttpMessageConverter"/>-->
    <!--</list>-->
    <!--</constructor-arg>-->
    <!--</bean>-->

    <context:component-scan base-package="com.bob.test.web" annotation-config="true"/>
    <context:component-scan base-package="com.bob.security.http.aspect" annotation-config="true"/>

    <!--
        当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern>
        映射时，能映射静态资源
    -->
    <mvc:default-servlet-handler/>
    <!--  静态资源映射   -->
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/image/**" location="/image/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/common/img/**" location="/common/img/"/>
    <mvc:resources mapping="/common/css/**" location="/common/css/"/>
    <mvc:resources mapping="/common/js/**" location="/common/js/"/>
    <mvc:resources mapping="/upload/**" location="/upload/"/>
    <mvc:resources mapping="/ueditor/**" location="/ueditor/"/>


    <!-- 配置freeMarker视图解析器 -->
    <bean id="viewResolverFtl"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <property name="cache" value="false"/>
        <property name="suffix" value=".ftl"/>
        <property name="contentType" value="text/html;charset=UTF-8"></property>
        <property name="requestContextAttribute" value="request"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="allowSessionOverride" value="true"/>
    </bean>
    <!-- freemarker的配置 -->
    <bean id="freemarkerConfig"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/views/"/>
        <property name="defaultEncoding" value="utf-8"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="tag_syntax">auto_detect</prop><!-- 设置标签类型 两种：[] 和 <> 。[] 这种标记解析要快些 -->
                <prop key="default_encoding">UTF-8</prop>
                <prop key="output_encoding">UTF-8</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="number_format">#.##</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="auto_import">/common/macros.ftl as p</prop>
                <prop key="boolean_format">true,false</prop>
            </props>
        </property>
    </bean>

</beans>
